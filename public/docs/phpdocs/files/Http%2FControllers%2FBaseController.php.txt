<?php namespace Ralphowino\Tutorials\Todo\Http\Controllers;


use Dingo\Api\Routing\Controller;
use Ralphowino\Tutorials\Todo\Http\Controllers\Traits\ExtendableTrait;

abstract class BaseController extends Controller
{
    use ExtendableTrait;

    protected $repository;

    protected $transformer;

    function __construct()
    {
        $api = \App::make('Dingo\Api\Dispatcher');
        $auth =  \App::make('Dingo\Api\Auth\Shield');
        $response = \App::make('Dingo\Api\Http\ResponseBuilder');
        parent::__construct($api, $auth, $response);
    }

    function index()
    {
        $request = \App::make('request');
        $this->callExtensions('index',$request);
        $per_page = $request->get('per_page',10);
        $collection = $this->repository->getPaginated($per_page);
        return $this->response->withCollection($collection,$this->transformer);
    }

    function show($key)
    {
        $request = \App::make('request');
        $this->callExtensions('index',$request);
        $record = $this->repository->getByKey($key);
        return $this->withItem($record,$this->transformer);
    }

    function store()
    {
        $record = $this->repository->create($this->createRequest);
        return $this->withItem($record,$this->transformer);
    }

    function update($key)
    {
        $record = $this->repository->update($key,$this->updateRequest);
        return $this->withItem($record,$this->transformer);
    }

    function destroy($key)
    {
        $this->repository->delete($key);
        return $this->setStatusCode(204)->withArray([]);

    }

    function __get($attr)
    {
        $getter = 'get'.studly_case($attr);
        if(method_exists($this,$getter))
        {
            return $this->$getter();
        }

    }

    abstract function getCreateRequest();
    abstract function getUpdateRequest();

}

