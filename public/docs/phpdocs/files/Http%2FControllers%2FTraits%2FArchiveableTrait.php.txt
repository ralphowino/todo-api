<?php namespace Ralphowino\Tutorials\Todo\Http\Controllers\Traits;


use Ralphowino\Tutorials\Todo\Domain\Repositories\Eloquent\Traits\ArchiveableRepository;

/**
 * Class ArchiveableTrait
 *
 * @property ArchiveableRepository $repository
 * @package Ralphowino\Tutorials\Todo\Http\Controllers\Traits
 */
trait ArchiveableTrait
{

    /**
     * @param $request
     */
    function archiveableIndex($request)
    {
        if($request->has('archived'))
        {
            $this->repository->getArchived($request->get('archived'));
        }
    }

    /**
     * @param $request
     */
    function archiveableShow($request)
    {
        if($request->has('archived'))
        {
            $this->repository->getArchived($request->get('archived'));
        }
    }

    /**
     * @param $key
     */
    function archive($key)
    {
        $record = $this->repository->archive($key);
        return $this->withItem($record,$this->transformer);
    }

    /**
     * @param $key
     */
    function restore($key)
    {
        $record = $this->repository->restore($key);
        return $this->withItem($record,$this->transformer);
    }

}

